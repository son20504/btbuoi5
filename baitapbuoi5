using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Drawing.Text;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Bai02
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void toolStripComboBox1_Click(object sender, EventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {
            fillFont();
            fillSize();

            tsCbbFont.SelectedItem = "Tahoma";
            tsCbbSize.SelectedItem = "14";
        }

        private void fillFont()
        {
            foreach (FontFamily fontFamily in new InstalledFontCollection().Families)
            {
                tsCbbFont.Items.Add(fontFamily.Name);
            }
        }

        private void fillSize()
        {
            int[] sizes = { 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72 };
            foreach (int size in sizes)
            {
                tsCbbSize.Items.Add(size.ToString());
            }
        }

        private void địnhDạngToolStripMenuItem_TextChanged(object sender, EventArgs e)
        {

        }

        private void lưuVanBảnToolStripMenuItem_Click(object sender, EventArgs e)
        {

        }

        private void địnhDạngToolStripMenuItem_Click_1(object sender, EventArgs e)
        {
            FontDialog fontDlg = new FontDialog();
            fontDlg.ShowColor = true;
            fontDlg.ShowApply = true;
            fontDlg.ShowEffects = true;
            fontDlg.ShowHelp = true;
            if (fontDlg.ShowDialog() != DialogResult.Cancel)
            {
                rtbVanBan.ForeColor = fontDlg.Color;
                rtbVanBan.Font = fontDlg.Font;
            }
        }

        private void tsCbbFont_Click(object sender, EventArgs e)
        {

        }

        private void tsCbbFont_TextChanged_1(object sender, EventArgs e)
        {
            rtbVanBan.Font = new Font(tsCbbFont.Text, 14, FontStyle.Regular);
        }


        private void tsCbbSize_TextChanged(object sender, EventArgs e)
        {
            string selectedFont = tsCbbFont.Text;
            if (int.TryParse(tsCbbSize.Text, out int selectedSize))
            {
                rtbVanBan.Font = new Font(selectedFont, selectedSize, FontStyle.Regular);
            }
        }

        private void tạoVănBảnMớiToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtbVanBan.Clear();

            tsCbbFont.SelectedItem = "Tahoma";
            tsCbbSize.SelectedItem = "14";
            rtbVanBan.Font = new Font("Tahoma", 14, FontStyle.Regular);
            rtbVanBan.ForeColor = Color.Black;
        }

        private void mởTậpTinToolStripMenuItem_Click(object sender, EventArgs e)
        {
            OpenFileDialog openFileDlg = new OpenFileDialog();
            openFileDlg.Filter = "Text Files (.txt)|.txt|Rich Text Format (.rtf)|.rtf";
            openFileDlg.Title = "Mở Tập Tin Văn Bản";

            if (openFileDlg.ShowDialog() == DialogResult.OK)
            {
                string filePath = openFileDlg.FileName;
                if (filePath.EndsWith(".rtf"))
                {
                    rtbVanBan.LoadFile(filePath, RichTextBoxStreamType.RichText);
                }
                else if (filePath.EndsWith(".txt"))
                {
                    rtbVanBan.LoadFile(filePath, RichTextBoxStreamType.PlainText);
                }
            }
        }

        private void toolStripButton3_Click(object sender, EventArgs e)
        {
            ToggleFontStyle(FontStyle.Bold);
        }

        private void toolStripButton4_Click(object sender, EventArgs e)
        {
            ToggleFontStyle(FontStyle.Italic);
        }

        private void toolStripButton5_Click(object sender, EventArgs e)
        {
            ToggleFontStyle(FontStyle.Underline);
        }
        private void ToggleFontStyle(FontStyle style)
        {
            if (rtbVanBan.SelectionFont != null)
            {
                Font currentFont = rtbVanBan.SelectionFont;
                FontStyle newStyle = rtbVanBan.SelectionFont.Style;

                if (rtbVanBan.SelectionFont.Style.HasFlag(style))
                {
                    newStyle &= ~style; 
                }
                else
                {
                    newStyle |= style; 
                }
                rtbVanBan.SelectionFont = new Font(currentFont.FontFamily, currentFont.Size, newStyle);
            }
        }
    }
}
